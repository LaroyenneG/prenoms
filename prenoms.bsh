#!/bin/bash
#===============================================================================
#
#          FILE:  prenoms.bsh
#
#         USAGE:  ./prenoms.bsh
#
#   DESCRIPTION:
#
#       OPTIONS:  ---
#  REQUIREMENTS:  ---
#          BUGS:  ---
#         NOTES:  ---
#        AUTHOR:  LAROYENNE Guillaume
#       COMPANY:  ---
#       VERSION:  ---
#       CREATED:  ---
#      REVISION:  ---
#===============================================================================

LANG="C"

#===  FUNCTION  ================================================================
#          NAME:
#   DESCRIPTION:
#    PARAMETERS:
#       RETURNS:
#===============================================================================


HELP="./prenoms.bsh\n 
\t -i \t\t\t\t\t\t Initialisation\n
\t -c \t\t\t\t\t\t Effacement de la campagne précédente\n
\t -a <site> <lettre> <genre> <debut> <fin> \t Ajout d’une nouvelle règle dans la campagne\n
\t -d \t\t\t\t\t\t Téléchargement des fichiers décrits par toutes les règles de la campagne\n
\t -e \t\t\t\t\t\t Extraction des prénoms et filtrages éventuels de tous les téléchargements\n
\t -m <fihier> \t\t\t\t\t Fusion de tous les prénoms découverts par la campagne en un seul fichier résultat dénommé fichier à la racine du répertoire courant.\n";

USAGE="prenoms.bsh [OPTION] ... \n";

ARGS_ERROR=-6;
INIT_ERROR=-7;

WEB_SITES_FILE=".inti.txt";
CAMPAINGN_FILE=".campaign.txt";


#===  FUNCTION  ================================================================
#          NAME: 
#   DESCRIPTION: 
#    PARAMETERS: 
#       RETURNS: 
#===============================================================================

isNumeric() {
	echo $1 | grep "^[ [:digit:] ]*$";
}


#===  FUNCTION  ================================================================
#          NAME: 
#   DESCRIPTION: 
#    PARAMETERS: 
#       RETURNS: 
#===============================================================================

isCharacter() {
	if [[ "$1" = [a-z] ]]; then
		echo "$1";
		return;
	fi

	if [[ "$1" = [A-Z] ]]; then
		echo "$1";
		return;
	fi
}

#===  FUNCTION  ================================================================
#          NAME: minuscule
#   DESCRIPTION: 
#    PARAMETERS: letter
#       RETURNS: letter
#===============================================================================

minuscule() {
	echo $1 | tr [:upper:] [:lower:];
}



#===  FUNCTION  ================================================================
#          NAME: initialization
#   DESCRIPTION: 
#    PARAMETERS: void
#       RETURNS: void
#===============================================================================

initialization() {

	if [[ -e $WEB_SITES_FILE ]]; then
		rm -f $WEB_SITES_FILE;
	fi

	touch $WEB_SITES_FILE;

	list="http://prenoms.aujourdhui.com/guide/commencant-par-%letter%.asp http://www.mamanpourlavie.com/prenoms/lettre/%letter%/%gender% http://www.bebepassion.com/prenoms/prenom-%gender%-%letter%.htm https://www.prenoms.com/prenom/recherche.html?advanced=True&Genre=%gender%&start_with=%letter%&page=%page% http://nominis.cef.fr/contenus/prenom/alphabetique/%letter%-%page%.html http://www.quelprenom.com/liste_prenoms.php?code=FR&sexe%5B0%5D=%gender%&start=%letter%&page=%page% http://www.magicmaman.com/prenom/recherche/commencantpar=%letter%#?commencantpar=%letter%&frai&sexe=%gender%&page=%page% https://www.naissance.fr/prenoms/recherche?gender=%gender%&begin=%letter%&page=%page%"

	for site in $list; do
		echo $site >> $WEB_SITES_FILE;
	done
}


#===  FUNCTION  ================================================================
#          NAME: getAllSiteName
#   DESCRIPTION: 
#    PARAMETERS: 
#       RETURNS: string
#===============================================================================

getAllSiteName() {
	if [[ ! -e $WEB_SITES_FILE ]]; then
		echo "File $WEB_SITES_FILE is not create" >&2;
		return;
	fi

	string="";
	for line in $(cat $WEB_SITES_FILE); do
		tpm=${line#*//};
		tpm=${tpm%/*};
		tpm=${tpm#*.};
		string="$string ${tpm%.*}";
	done

	echo $string;
}

#===  FUNCTION  ================================================================
#          NAME: checkArgsCampaign
#   DESCRIPTION:
#    PARAMETERS: site lettre genre debut fin
#       RETURNS: format line or void string
#===============================================================================

checkArgsCampaign() {

	if [[ $# -ne  5 ]]; then
		echo "$ARGS_ERROR";
		return;
	fi

	listNameSite=$(getAllSiteName);

	if [[ "$listNameSite" = "" ]]; then
		echo "Le programme n'est pas inisialisé !" >&2;
		echo "$INIT_ERROR";
		return;	
	fi

	#================= site ====================
	site=$1;

	if [[ "$(isNumeric $site)" = "$site" ]]; then

		nbLine=$(cat $WEB_SITES_FILE | wc -l);

		if [ "$site" -lt "0" ] || [ "$site" -ge "$nbLine" ]; then
			echo "-1";
			return;
		fi

	else
		id=-1;
		count=0;
		i=0;

		for name in $listNameSite; do

			result=$(grep "$site" <<< "$name");
			if [[ "$result" = "$name" ]]; then
				id=$i;
				count=$(expr $count + 1);
			fi
			i=$(expr $i + 1);
		done

		if [ "$id" -gt "-1" ] && [ "$count" -eq "1" ]; then
			site=$(expr $id + 1);
		else
			echo "-2";
			return;
		fi
	fi

	#================ lettre ====================
	lettre=$2;

	if [[ "$lettre" = $(isCharacter $lettre) ]]; then
		lettre=$(minuscule $lettre);
	else
		echo "-3";
		return;	
	fi

	#================ genre =====================
	genre=$3;

	if [ "$genre" = "garcon" ] || [ "$genre" = "boy" ]; then
		genre=1;
	fi

	if [ "$genre" = "fille" ] || [ "$genre" = "girl" ]; then
		genre=0;
	fi

	if [ ! "$genre" = "1" ] && [ ! "$genre" = "0" ]; then
		echo "-4";
		return;
	fi


	#================== debut fin ==================
	debut=$4;
	fin=$5;
	
	if [[ ! $(isNumeric $debut) = "$debut" ]]; then
		if [ ! "$debut" = "no" ] && [ ! "$debut" = "-" ]; then
			echo "-5";
			return;
		fi

		debut="-";
	fi

	if [[ ! $(isNumeric $fin) = "$fin" ]]; then
		if [ ! "$fin" = "no" ] && [ ! "$fin" = "-" ]; then
			echo "-5";
			return;
		fi

		fin="-";
	fi

	if [ ! "$debut" = "-" ] && [ "$debut" -lt "0" ]; then
		echo "-6";
		return;
	fi

	if [ ! "$fin" = "-" ] && [ ! "$debut" = "-" ] && [ ! "$fin" -ge "$debut" ]; then
		echo "-6";
		return;
	fi

	line="$site $lettre $genre $debut $fin";
	echo $line;
}


#===  FUNCTION  ================================================================
#          NAME: addCampaign
#   DESCRIPTION:
#    PARAMETERS: site lettre genre debut fin
#       RETURNS: status (integer)
#=====66==========================================================================

addCampaign() {

	if [[ $# -ne 5 ]]; then
		echo "$ARGS_ERROR";
		return;
	fi

	string="";
	for (( i = 2; i <= $#; i++ )); do
		string="$string ${!i}";
	done

	echo $string >> $CAMPAINGN_FILE;

	echo "";
	return;
}


#===  FUNCTION  ================================================================
#          NAME: deleteCampaign
#   DESCRIPTION:
#    PARAMETERS: void
#       RETURNS: status (integer)
#===============================================================================

deleteCampaign() {

	if [[ $# -ne 0 ]]; then
		return $ARGS_ERROR;
	fi

	if [[ -e $CAMPAINGN_FILE ]]; then
		rm -f $CAMPAINGN_FILE;		
	else
		return -2;
	fi

	return 0;
}

#echo -e $USAGE;

# 3
# La convergence sera d'ordre 2 si 
# g'(a)=0 et g''(a)!=0
# 4
# La convergence sera d'ordre 3 si 
# g'(a)=g''(a)=0 et g'''(a)!=0
# p 14

# Test de la fonction checkArgsCampaign
